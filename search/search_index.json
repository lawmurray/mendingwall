{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"![Mending Wall icon](assets/logo.svg){width=200 height=200}  # **Mending Wall**  **Linux distributions offer a choice of desktop environment, but installing more than one can break themes and clutter menus. Mending Wall fixes this, so you can enjoy them all.**  [Install](getting-started.md){.md-button .md-button--primary style=\"margin:1em\"}     -   :material-kangaroo: __Hop between desktop environments__      ---      Use GNOME, KDE Plasma, Xfce, and Cinnamon on the same user account without broken themes and cluttered menus. Enjoy a change of scenery.  -   :eyes: __Just starting with Linux?__      ---      You've chosen a Linux distribution, but which desktop environment? Mending Wall lets you try a few before you settle down, without breaking anything. It also lets you never settle down.  -   :material-monitor-shimmer: __Mend Themes__      ---      Mending Wall fixes common issues when hopping between desktop environments, such as  tiny cursors :material-cursor-default:{style=\"font-size:10px;\"}, huge cursors :material-cursor-default:{style=\"font-size:24px;\"}, tiny fonts :material-format-font:{style=\"font-size:10px;\"}, huge fonts :material-format-font:{style=\"font-size:24px;\"}, unintended dark mode changes, icon changes, and scaling issues on HiDPI displays.      [:octicons-arrow-right-24: Learn more about fixing themes](mend-themes.md)  -   :material-comment: __Tidy Menus__      ---      Desktop environments each have their own core applications like a terminal, file manager, and text editor. With more than one desktop environment installed, menus can become cluttered with these. Mending Wall tidies menus to show core applications in their native desktop environment only. No more six terminals, five file managers, and three text editors.      [:octicons-arrow-right-24: Learn more about tidying menus](tidy-menus.md)  -   :material-slope-downhill: __Easy to use__      ---      Start it up and switch it on. The best time is before you log in to a second desktop environment.      ![Screenshot of the main application window, light mode](assets/screenshot_light.webp#only-light){width=400 height=490}![Screenshot of the main application window, dark mode](assets/screenshot_dark.webp#only-dark){width=400 height=490}     /// caption     ///  -   :fontawesome-solid-hammer: __Theme already broken?__      ---      In future, Mending Wall may allow recovery from a state that is already broken, such as after using multiple desktop environments without Mending Wall enabled.      !!! help \"Work in progress\"         This feature is work in progress. Consider [contributing your time](contributing.md) or [becoming a sponsor](https://github.com/sponsors/lawmurray) to help."},{"location":"contributing/","title":"How You Can Help","text":"<p>Mending Wall is designed to make contributions as easy as possible, either with or without programming experience. Contributions from users are essential to expand coverage of desktop environments and Linux distributions.</p>   -   :material-hand-heart: __Provide feedback__       ---       Tell us whether or not Mending Wall worked for you. It is helpful to know which Linux distribution you are using, and which desktop environments you are trying to use.       [:octicons-arrow-right-24: Start a discussion](https://github.com/lawmurray/mendingwall/discussions)  -   :material-bug: __Report an issue__      ---      If you find a bug, or can be more specific about what is not working for you, open an issue. It is helpful to provide specific steps to reproduce it.      [:octicons-arrow-right-24: Open an issue](https://github.com/lawmurray/mendingwall/issues)  -   :fontawesome-solid-gear: __Improve configuration__      ---      Mending Wall uses simple config files, and no programming experience is necessary to tweak them. This can involve adding new applications to *Tidy Menus*, additional theme config to *Mend Menus*, or support for a whole new desktop environment.      [:octicons-arrow-right-24: Learn about configuring Mend Themes](mend-themes.md#configuration)      [:octicons-arrow-right-24: Learn about configuring Tidy Menus](tidy-menus.md#configuration)      [:octicons-arrow-right-24: Start a discussion to propose changes](https://github.com/lawmurray/mendingwall/discussions)  -   :fontawesome-solid-hammer: __Contribute code__      ---      Mending Wall is free software licensed under the [GPLv3](https://www.gnu.org/licenses/gpl-3.0.en.html). It is written in C as a GNOME application using [Adwaita](https://gnome.pages.gitlab.gnome.org/libadwaita/), [GTK4](https://gtk.org/), and [Blueprint](https://jwestman.pages.gitlab.gnome.org/blueprint-compiler/). The background program is written in C using just [GLib](https://docs.gtk.org/glib/).      [:octicons-arrow-right-24: Submit a pull request](https://github.com/lawmurray/mendingwall/pull_requests)   <p>Sponsorship</p> <p>If you cannot contribute time to the project, you might consider financial support instead by becoming a sponsor.</p>"},{"location":"contributing/#suggested-workflow","title":"Suggested workflow","text":"<p>Info</p> <p>This section is written for potential contributors who would like to explore the issues that Mending Wall seeks to address, in order to improve the app and Linux desktop experience.</p> <p>You have several options as a work environment:</p> <ol> <li>Use a virtual machine, perhaps run via Boxes, virt-manager or VirtualBox, and install a Linux distribution to work with. There is value in testing different Linux distributions, so consider it a chance to try something new!</li> <li>Use your current system but first create a snapshot that you can restore in case of problems, perhaps using Timeshift or Snapper.</li> <li>Use your current system if you are determined to fix everything that breaks anyway. You do, after all, only live once.</li> </ol>"},{"location":"contributing/#investigating-breakages","title":"Investigating breakages","text":"<p>Once you have chosen a work environment, you need to install at least two desktop environments for testing (e.g. GNOME and KDE). In most cases, one will already have been installed when you installed Linux. After installation, a typical workflow is as follows:</p> <ol> <li>Log into the first desktop environment and ensure that it is running correctly. Make a copy of the configuration (see below).</li> <li>Log into the second desktop environment and ensure that it is running correctly. Usually there are no problems at this stage. Make a copy of the configuration.</li> <li>Log into the first desktop environment again. Often something will now be broken, e.g. the theme, cursors, icons, fonts. Make a copy of the (broken) configuration.</li> <li>Fix what is broken in the first desktop environment, which can usually be achieved through its settings app. Make a copy of the (now fixed) configuration.</li> </ol> <p>You should now have four complete copies of the configuration in various states, from each of the four steps. You can now compare those (see below) and see what changed to cause the breakage, and propose updates to the Mending Wall config files to fix these breakages.</p> <p>Info</p> <p>Preliminary information is valuable! As soon as you have something to share, start a discussion or open an issue. Other users may be able to help in understanding problems and contributing a fix.</p>"},{"location":"contributing/#copying-configuration","title":"Copying configuration","text":"<p>Desktop environments keep their configuration in one of two places:</p> <ol> <li>GSettings, stored in the dconf database, and</li> <li>config files, usually stored in <code>$HOME/.config/</code>.</li> </ol> <p>To create a copy of these, the suggested approach is:</p> <ol> <li>Choose a working directory, e.g. <code>$HOME/backup</code>. Make that directory, change into it, and create a subdirectory for the copy, e.g. <code>copy1</code>:     <code>mkdir -p $HOME/backup     cd $HOME/backup     mkdir copy1</code></li> <li>Dump your entire dconf database into the subdirectory:     <code>dconf dump / &gt; copy1/dconf.dump</code></li> <li>Back up your entire <code>$HOME/.config</code> directory into the subdirectory:     <code>cp -r $HOME/.config copy1/.</code></li> </ol> <p>You now have the first copy in <code>copy1</code>, and can repeat with subdirectories <code>copy2</code>, <code>copy3</code>, <code>copy4</code>, etc, to take a snapshot of the configuration state at various times.</p>"},{"location":"contributing/#comparing-configuration","title":"Comparing configuration","text":"<p>Once you have multiple copies of the configuration, you can make comparisons with a recursive <code>diff</code> from within the working directory. To show just the files that have changed, use:</p> <pre><code>diff -qr config1 config2\n</code></pre> <p>To show all the lines that have changed, use:</p> <pre><code>diff -r config1 config2\n</code></pre> <p>Changes between <code>dconf.dump</code> files indicate changes in GSettings paths.</p>"},{"location":"contributing/#understanding-the-changes","title":"Understanding the changes","text":"<p>The above commands should give you a good idea of which GSettings paths and config files need to be backed up and restored to preserve the theme of the first desktop environment. But the next step is to understand what these changes actually do, and whether they can be fixed without Mending Wall at all, such as by using the settings provided by the desktop environment, or an option that restores the default theme.</p> <p>This information is useful for users whose theme is already broken, and could also be automated with a new feature in Mending Wall, similar to the Restore Default GNOME Theme feature.</p>"},{"location":"contributing/#creating-a-fix","title":"Creating a fix","text":"<p>Once you understand what is going on, you can make changes to the <code>themes.conf</code> configuration file as described in Mend Themes to fix the issue. This will involve adding the GSettings and config files to be saved and restored. You may not want to add everything that you found, and indeed should not add things blindly, in case that actually creates more problems. It is worth understanding what each of the changed GSettings and config files does, at least to the extent that saving and restoring them can be justified.</p>"},{"location":"contributing/#testing-the-fix","title":"Testing the fix","text":"<p>You will want to do some testing now to ensure that the fix actually works. Using a fresh virtual machine is ideal to test from scratch. From a first desktop environment that is working as desired, a typical test sequence is:</p> <ol> <li>Start Mending Wall and ensure that Mend Themes is running.</li> <li>Log out of the first desktop environment.</li> <li>Log into the second desktop environment.</li> <li>Log out of the second desktop environment.</li> <li>Log into the first desktop environment again.</li> <li>See whether your fix worked.</li> <li>Iterate if necessary.</li> </ol>"},{"location":"contributing/#useful-tools","title":"Useful tools","text":"<ul> <li> <p>For an app to browse the <code>dconf</code> database and make edits, consider Dconf Editor.</p> </li> <li> <p>For an app to modify <code>.desktop</code> files, consider Libre Menu Editor.</p> </li> <li> <p>To watch for changes to the dconf database, use the <code>dconf</code> command-line tool:    <code>dconf watch /</code>    The path <code>/</code> can be made more specific, e.g.    <code>dconf watch /org/gnome/desktop/</code>    This will output changes to the path live as you mess about.</p> </li> </ul>"},{"location":"faq/","title":"Q &amp; A","text":""},{"location":"faq/#why-the-name","title":"Why the name?","text":"<p>Mending Wall is a poem written by Robert Frost, published in 1914. One of its themes is how walls can both unite and divide us. The narrator and their neighbor walk the line of a stone wall between their properties, making repairs. The famous line, \"Good fences make good neighbors,\" is spoken by the neighbor, reflecting a different life view to the narrator.</p> <p>When it comes to desktop environments, it is unclear where walls should and should not exist, and user preference surely has a role. Mending Wall, the app, expresses the view that the current state needs some repair.</p>"},{"location":"faq/#which-desktop-environments-are-supported","title":"Which desktop environments are supported?","text":"<p>At this stage GNOME and KDE Plasma are supported, and Xfce and Cinnamon to a lesser degree (they have not been tested as thoroughly). Supported desktop environments are likely protected from interference from unsupported desktop environments, but not vice versa.</p> <p>Help is sought for additional desktop environments, especially from daily drivers whose regular use will help weed out issues.</p> <p>There is a table on the Getting Started page to track desktop environment support.</p>"},{"location":"faq/#which-linux-distributions-are-supported","title":"Which Linux distributions are supported?","text":"<p>Generally any, but those that do extensive theming out-of-the-box are more likely to have unresolved issues that are yet to be reported.</p> <p>Help is sought for additional Linux distributions, especially from daily drivers whose regular use will help weed out issues.</p> <p>There is a table on the Getting Started page to track Linux distribution support.</p>"},{"location":"faq/#what-if-my-theme-is-already-broken","title":"What if my theme is already broken?","text":"<p>If you can fix it manually then Mending Wall is able to keep your fixes and prevent it breaking again, but Mending Wall is not yet able to restore from a broken state.</p> <p>Work in progress</p> <p>Restoring from a broken state is work in progress. Consider contributing your time or becoming a sponsor to help.</p> <p>On GNOME, most issues are fixed by using GNOME Tweaks and selecting Reset to Defaults from the menu. Be aware that this will usually restore a default GNOME look without any customizations from your Linux distribution, however. You may also need to use the Settings app to fix scaling and dark/light mode issues: head to the Displays and Appearance sections.</p> <p>On KDE Plasma, applying a new global theme and cursor theme gets you most of the way.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Mending Wall is free and open source software distributed under the GPLv3.</p>   -   :material-package-down: __Install a package__      ---      Packages for major Linux distributions are provided at **download.indii.org**      [:octicons-arrow-right-24: Go to package repository](https://download.indii.org)  -   :material-git: __Install from source__      ---      Install from source using the **GitHub repository**      [:octicons-arrow-right-24: Go to source repository](https://github.com/lawmurray/mendingwall)   <p>After installation, start the Mending Wall app and switch on the Tidy Menus and/or Mend Themes toggles. Both are recommended. The best time to do this is before you log in to a second desktop environment.</p> <p>Mending Wall is in testing, and could do with your help. Desktop environments are configured differently across Linux distributions and may require different interventions to fix issues, making user feedback essential. The following table summarizes the current state of testing.</p>  GNOME  KDE  Xfce  Cinnamon Others Ubuntu Debian Linux Mint EndeavourOS Arch\u00a0Linux Manjaro openSUSE Fedora  Others /// caption  Distribution that has been tested.  Distribution that has not been tested, but is similar to one that has.  Tested.  Not tested. ///"},{"location":"mend-themes/","title":"Mend Themes","text":"<p>Applications native to one desktop environment can look out of place when run on another. For example, a GNOME app running on KDE Plasma may have a different title bar, button style, and icon style; similarly for a KDE Plasma app run on GNOME.</p> <p>To unify their look, desktop environments tweak themes to have non-native applications blend in better. They may not revert those tweaks on log out, however, leaving you with a mess when you then log in to a different desktop environment.</p> <p> /// caption GNOME before using KDE Plasma: the icons and cursor follow the default Adwaita theme. ///</p> <p> /// caption GNOME after using KDE Plasma: the cursor is large and poorly rendered, the icons and cursors now follow the Breeze theme (default for KDE Plasma). ///</p> <p>To have Mending Wall fix all this, enable the Mend Themes feature. It ensures that the theme chosen for each desktop environment is maintained across sessions, even when running other desktop environments in between.</p>"},{"location":"mend-themes/#what-it-does","title":"What it does","text":"<p>Mend Themes saves the theme during each desktop session, then restores it when you next log in to the same desktop environment. For example:</p> <ol> <li>While you are running GNOME, Mending Wall saves the theme.</li> <li>If you log out of GNOME and into KDE Plasma, KDE will make some changes to the GNOME theme to improve the user experience on KDE. Mending Wall will save the theme for KDE too.</li> <li>If you then log out of KDE and back into GNOME, Mending Wall will restore the GNOME theme that it previously saved, so that KDE's changes do not interfere with GNOME. GNOME may also make some tweaks to the KDE theme at this stage.</li> <li>Similarly, when you log back into KDE in future, Mending Wall will restore the KDE theme that it previously saved, so that GNOME's tweaks do not interfere with KDE either.</li> </ol>"},{"location":"mend-themes/#how-it-works","title":"How it works","text":"<p>Info</p> <p>This section is for users who want to know exactly what Mending Wall is doing to their system.</p> <p>When Mend Themes is enabled, Mending Wall starts a background process named <code>mendingwalld</code> that will also auto-start every time you log in. The process starts in one of two modes:</p> <ol> <li>Save to make a copy of the theme, monitor for changes, and update the save. This mode is used when Mend Themes is enabled for the first time (or re-enabled after being disabled).</li> <li>Restore to restore the previous save, monitor for changes, and update it. This is used for the auto-start every time you log in.</li> </ol> <p>A save includes:</p> <ol> <li>Any number of GSettings paths. These are typically used for configuration by desktop environments based on GTK, such as GNOME and Cinnamon. The save is kept as a keyfile at <code>$XDG_CONFIG_HOME/mendingwall/save/$XDG_CURRENT_DESKTOP.gsettings</code>, where groups identify the GSettings paths and keys the GSettings keys.</li> <li>Any number of config files under <code>$XDG_CONFIG_HOME/</code>. Such config files may be used by any desktop environments, including those based on GTK, but also Qt, such as KDE Plasma, or other toolkits. Saved files are kept under <code>$XDG_CONFIG_HOME/mendingwall/save/$XDG_CURRENT_DESKTOP/</code>.</li> </ol> <p><code>XDG_CURRENT_DESKTOP</code> is an environment variable set by the desktop environment. <code>XDG_CONFIG_HOME</code> is an environment variable that may or may not be set by the desktop environment; if not set, the default value of <code>$HOME/.config</code> is used.</p>"},{"location":"mend-themes/#configuration","title":"Configuration","text":"<p>Info</p> <p>This section is for contributors to help improve Mending Wall. The installed configuration is meant to be suitable for everyone with no adjustments required, rather than something that is routinely modified.</p> <p>The specific GSettings paths and config files to back up and restore are set in the config file <code>themes.conf</code>. If the environment variable <code>XDG_CONFIG_HOME</code> is set and <code>$XDG_CONFIG_HOME/mendingwall/themes.conf</code> exists then that file is used, otherwise <code>$HOME/.config/mendingwall/themes.conf</code>, otherwise the directories listed in <code>XDG_CONFIG_DIRS</code> are checked in order for <code>mendingwall/themes.conf</code> until the file is found.</p> <p>If <code>themes.conf</code> is in a system directory and you wish to make changes to it, first copy it to <code>$XDG_CONFIG_HOME/mendingwall/themes.conf</code> or <code>$HOME/.config/mendingwall/themes.conf</code>.</p> <p>The config file is a KeyFile. It contains any number of group headers to identify desktop environments, each followed by key-value pairs that specify the GSettings paths and config files to backup and restore. For example:</p> <pre><code>[GNOME]\nGSettings=org.gnome.desktop.interface\n\n[KDE]\nConfigFiles=kwinrc;kcminputrc\n</code></pre> <p>The group headers are surrounded by square brackets (<code>[...]</code>) and identify the desktop environments. The environment variable <code>XDG_CURRENT_DESKTOP</code> is used to determine which group to use. If <code>XDG_CURRENT_DESKTOP</code> lists multiple desktop environments (e.g. <code>Budgie:GNOME</code>, note colon-separated in this case, as per the specification) then it is treated as if one value; in this context such combinations really indicate a distinct desktop environment (e.g. <code>Budgie:GNOME</code> really just indicates Budgie).</p> <p>Each key is followed by an equals sign (<code>=</code>), and where multiple values are required they are separated by semicolons (<code>;</code>). Recognized keys are:</p> Key Value <code>GSettings</code> GSettings schemas to save and restore. <code>ConfigFiles</code> Config files to save and restore. Each should be relative to the <code>$XDG_CONFIG_HOME/</code> (or default <code>$HOME/.config/</code>) directory. There is no support for directories or recursion. <p>Tip</p> <p>You may notice that the current <code>themes.conf</code> has the same <code>GSettings</code> and <code>ConfigFiles</code> for all desktop environments. If the pattern continues, the config file may be simplified in future, but for now it allows different configuration for different desktop environments, in case that becomes useful.</p>"},{"location":"mend-themes/#related-specifications","title":"Related specifications","text":"<ul> <li>The XDG Base Directory Specification for the <code>XDG_CONFIG_HOME</code> environment variable.</li> <li>The Recognized desktop entry keys section of the XDG Desktop Entry Specification for the <code>XDG_CURRENT_DESKTOP</code> environment variable.</li> </ul>"},{"location":"tidy-menus/","title":"Tidy Menus","text":"<p>Most desktop environments provide core applications such as a terminal, file manager and text editor. These provide much the same functionality as counterpart applications in other desktop environments, but can clutter up menus with seemingly redundant applications.</p> <p> /// caption With GNOME, KDE and Xfce installed, the KDE menu shows six file manager applications. ///</p> <p> /// caption Simlarly, the GNOME dash shows six terminal applications. ///</p> <p>To have Mending Wall tidy up menus automatically, enable its Tidy Menus feature. It will then show core applications in the menu for their respective desktop environment only.</p>"},{"location":"tidy-menus/#what-it-does","title":"What it does","text":"<p>Tidy Menus applies a set of rules to show certain applications in their native desktop environment only. It does not apply to all applications. The rules are generally consistent with the notion that you, the user, will always prefer a native app over a non-native app. So you will use Console, Nautilus and Text Editor on GNOME, but Konsole, Dolphin and Kate on KDE Plasma.</p> <p>The rules apply mostly to core applications with counterparts in other desktop environments, as well as many games. They do not apply to larger applications that are too featureful to be considered counterparts, despite having similar aims, such as GIMP and Krita. The rules only affect visibility in menus; all applications are still available in all desktop environments and can be launched by other means (such as from the command line).</p> <p>Tip</p> <p>You can also use an app like Libre Menu Editor to change menus, or edit <code>.desktop</code> files directly. Mending Wall will not override changes made with other apps. The recommended approach is to enable Tidy Menus in Mending Wall to automate the process as much as possible, then use another app for refinement if necessary.</p>"},{"location":"tidy-menus/#how-it-works","title":"How it works","text":"<p>Info</p> <p>This section is for users who want to know exactly what Mending Wall is doing to their system.</p> <p>When Tidy Menus is enabled, Mending Wall starts a background process named <code>mendingwalld</code> that will also auto-start every time you log in. This process applies the menu rules, and reapplies them when new applications are installed. When Tidy Menus is disabled, it will undo any changes.</p> <p>The process acts as follows:</p> <ol> <li> <p>It considers all <code>.desktop</code> files installed in the <code>applications</code> subdirectory of any directories listed in the <code>XDG_DATA_DIRS</code> environment variable (e.g. <code>/usr/share/applications</code>, <code>/usr/local/share/applications</code>).</p> </li> <li> <p>For each <code>.desktop</code> file it determines, according to its rules, whether the <code>OnlyShowIn</code> or <code>NotShowIn</code> keys should be updated.</p> </li> <li> <p>If so, it copies the <code>.desktop</code> file into <code>$XDG_DATA_HOME/applications/</code> and updates those keys. It also adds an entry <code>X-MendingWall-Tidied=true</code> for record keeping, in case Tidy Menus is disabled in future and changes must be undone. If a <code>.desktop</code> file for the application already exists in <code>$XDG_DATA_HOME/applications/</code>, it is not changed (in this way, customizations made with other apps are not overwritten). If the environment variable <code>XDG_DATA_HOME</code> does not exist then the default value <code>$HOME/.local/share</code> is used.</p> </li> <li> <p>It continues to monitor for changes to any of the directories listed in <code>XDG_DATA_DIRS</code>. When changes occur it reapplies the rules. For example, if a new application is installed, one or more new <code>.desktop</code> files will appear in these directories and be subject to the rules.</p> </li> </ol>"},{"location":"tidy-menus/#configuration","title":"Configuration","text":"<p>Info</p> <p>This section is for contributors to help improve Mending Wall. The installed rules are meant to be suitable for everyone, with adjustments made with other apps.</p> <p>The rules applied by Tidy Menus are set in the config file <code>menus.conf</code>. If the environment variable <code>XDG_CONFIG_HOME</code> is set and <code>$XDG_CONFIG_HOME/mendingwall/menus.conf</code> exists then that file is used, otherwise <code>$HOME/.config/mendingwall/menus.conf</code>, otherwise the directories listed in <code>XDG_CONFIG_DIRS</code> are checked in order for <code>mendingwall/menus.conf</code> until the file is found.</p> <p>If <code>menus.conf</code> is in a system directory and you wish to make changes to it, first copy it to <code>$XDG_CONFIG_HOME/mendingwall/menus.conf</code> or <code>$HOME/.config/mendingwall/menus.conf</code>.</p> <p>The config file is a KeyFile. It contains any number of group headers to identify applications, each followed by key-value pairs that specify the desktop environments in which to show that application. For example:</p> <pre><code>[org.kde.Konsole]\nOnlyShowIn=KDE\n\n[org.gnome.Console]\nOnlyShowIn=GNOME;X-Cinnamon\n</code></pre> <p>The group headers are surrounded by square brackets (<code>[...]</code>) and identify the applications. Each should be the name of the <code>.desktop</code> file of the application, but without the <code>.desktop</code> extension. The names are usually, but not always, reverse domain-name identifiers (e.g. they start with <code>org.gnome.</code> or <code>org.kde.</code>).</p> <p>Each key is followed by an equals sign (<code>=</code>), and where multiple values are required they are separated by semicolons (<code>;</code>). Recognized keys are:</p> Key Description <code>OnlyShowIn</code> The application will only be shown in these desktop environments. <code>NotShowIn</code> The application will be shown in all but these desktop environments. <p>It only makes sense to use one of these. They are copied into the <code>.desktop</code> file of the application. Valid values are the same as those that appear in the <code>XDG_CURRENT_DESKTOP</code> environment variable set by desktop environments, e.g. <code>GNOME</code> and <code>KDE</code>. These are case sensitive.</p>"},{"location":"tidy-menus/#relevant-specifications","title":"Relevant specifications","text":"<ul> <li>The XDG Base Directory Specification for the <code>XDG_CONFIG_HOME</code>, <code>XDG_CONFIG_DIRS</code>, <code>XDG_DATA_HOME</code>, and <code>XDG_DATA_DIRS</code> environment variables.</li> <li>The XDG Desktop Entry Specification for <code>.desktop</code> files, especially the Recognized desktop entry keys section for interpretation of the <code>OnlyShowIn</code> and <code>NotShowIn</code> keys and related <code>XDG_CURRENT_DESKTOP</code> environment variable.</li> <li>The XDG Desktop Menu Specification and especially Registered OnlyShowIn environments.</li> </ul>"}]}