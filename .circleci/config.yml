version: 2.1

executors:

  linux:
    docker:
      - image: ubuntu:oracular
    resource_class: small
    environment:
      DEBIAN_FRONTEND: noninteractive
      DISPLAY: :0.0
      RDP_USER: testuser
      RDP_PASS: testpass

commands:

  environment:
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update --assume-yes
            apt install --assume-yes --no-install-recommends \
              ca-certificates \
              sudo \
              curl \
              git \
              ssh \
              gcc \
              gettext \
              appstream \
              desktop-file-utils \
              meson \
              python3-gi \
              libgtk-4-dev \
              libglib2.0-bin \
              libglib2.0-dev \
              libadwaita-1-dev \
              winpr-utils \
              dbus-x11 \
              gnome-remote-desktop \
              gnome-connections
            export $(dbus-launch)
      - run:
          name: Generate certificate
          command: |
            mkdir -p ~gnome-remote-desktop
            winpr-makecert -silent -rdp -path ~gnome-remote-desktop rdp-tls
      - run:
          name: Configure GNOME headless
          command: |
            grdctl --headless rdp set-credentials "${RDP_USER}" "${RDP_PASS}"
            grdctl --headless rdp set-tls-key ~gnome-remote-desktop/rdp-tls.key
            grdctl --headless rdp set-tls-cert ~gnome-remote-desktop/rdp-tls.crt
            grdctl --headless rdp enable
      - run:
          name: Start GNOME headless
          command: |
            systemctl enable gnome-remote-desktop.service

  build:
    steps:
      - run:
          name: Build
          command: |
            meson setup build
            cd build
            meson compile
            meson install
            gdbus call --session --dest org.freedesktop.DBus --object-path /org/freedesktop/DBus --method org.freedesktop.DBus.ReloadConfig

  test:
    steps:
      - run:
          name: Smoke test
          command: |
            mendingwall -h
            mendingwalld -h
      - run:
          name: Test currently disabled
          command: |
            `gsettings get org.indii.mendingwall themes` == false || exit 1
            `gsettings get org.indii.mendingwall menu` == false || exit 1
      - run:
          name: Enable
          command: |
            gsettings set org.indii.mendingwall themes true
            gsettings set org.indii.mendingwall menus true
      - run:
          name: Test now enabled
          command: |
            `gsettings get org.indii.mendingwall themes` == true || exit 1
            `gsettings get org.indii.mendingwall menu` == true || exit 1

jobs:

  linux:
    executor: linux
    steps:
      - checkout
      - environment
      - build
      - test

  deploy:
    executor: linux
    steps:
      - environment
      - run:
          name: Trigger package update
          command: |
              curl -X POST https://circleci.com/api/v2/project/gh/lawmurray/download.indii.org/pipeline \
                --header "Circle-Token: $CIRCLE_TOKEN" \
                --header "content-type: application/json" \
                --data '{"branch": "main"}'

workflows:

  version: 2
  all:
    jobs:
      - linux
      - deploy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
