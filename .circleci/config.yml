version: 2.1

executors:

  linux:
    docker:
      - image: ubuntu:oracular
    resource_class: small
    environment:
      DEBIAN_FRONTEND: noninteractive
      DISPLAY: :0.0
      RDP_USER: testuser
      RDP_PASS: testpass
      XDG_CURRENT_DESKTOP: GNOME

commands:

  environment:
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update --assume-yes
            apt install --assume-yes \
              ca-certificates \
              sudo \
              curl \
              git \
              ssh \
              gcc \
              gettext \
              appstream \
              desktop-file-utils \
              meson \
              python3-gi \
              libgtk-4-dev \
              libglib2.0-bin \
              libglib2.0-dev \
              libadwaita-1-dev \
              winpr-utils \
              dbus-x11 \
              xwayland-run \
              gnome-remote-desktop \
              gnome-connections \
              vanilla-gnome-desktop
      # - run:
      #     name: Generate certificate
      #     command: |
      #       mkdir -p ~gnome-remote-desktop
      #       winpr-makecert -silent -rdp -path ~gnome-remote-desktop rdp-tls
      # - run:
      #     name: Configure GNOME headless
      #     command: |
      #       grdctl --headless rdp set-credentials "${RDP_USER}" "${RDP_PASS}"
      #       grdctl --headless rdp set-tls-key ~gnome-remote-desktop/rdp-tls.key
      #       grdctl --headless rdp set-tls-cert ~gnome-remote-desktop/rdp-tls.crt
      #       grdctl --headless rdp enable
      # - run:
      #     name: Start GNOME headless
      #     command: |
      #       systemctl enable gnome-remote-desktop.service
      - run:
          name: Start DBus
          command: |
            dbus-launch --auto-syntax >> $BASH_ENV

  build:
    steps:
      - run:
          name: Build
          command: |
            meson setup build
            cd build
            meson compile
            meson install
            gdbus call --session --dest org.freedesktop.DBus --object-path /org/freedesktop/DBus --method org.freedesktop.DBus.ReloadConfig

  test:
    steps:
      - run:
          name: Does help work?
          command: |
            mendingwall -h
            mendingwalld -h

      - run:
          name: Is mend themes disabled by default?
          command: |
            [[ `gsettings get org.indii.mendingwall themes` == false ]] || exit 1
      - run:
          name: Enable mend themes
          command: |
            xwfb-run mendingwall -- --enable-themes --headless
      - run:
          name: Is mend themes now enabled?
          command: |
            [[ `gsettings get org.indii.mendingwall themes` == true ]] || exit 1

      - run:
          name: Is tidy menus disabled by default?
          command: |
            [[ `gsettings get org.indii.mendingwall menus` == false ]] || exit 1
      - run:
          name: Enable tidy menus
          command: |
            xwfb-run mendingwall -- --enable-menus --headless
      - run:
          name: Is tidy menus now enabled?
          command: |
            [[ `gsettings get org.indii.mendingwall menus` == true ]] || exit 1

      - run:
          name: Is daemon now running?
          command: |
            [[ `ps -C mendingwalld -o pid= | wc -l` == 1 ]] || exit 1
      - run:
          name: Are autostart files installed?
          command: |
            [[ -f ~/.config/autostart/org.indii.mendingwall.restore.desktop && \
               -f ~/.config/autostart/org.indii.mendingwall.watch.desktop && \
               -f ~/.config/plasma-workspace/env/org.indii.mendingwall.restore.sh
            ]] || exit 1

      - run:
          name: Sleep, in case daemon is just waiting for activate signal
          command: sleep 10
      - run:
          name: Is daemon still running?
          command: |
            [[ `ps -C mendingwalld -o pid= | wc -l` == 1 ]] || exit 1

      - run:
          name: Have GNOME apps been tidied?
          command: |
            [[ `ls ~/.local/share/applications/org.gnome.*.desktop | wc -l` > 0 ]] || exit 1
      - run:
          name: Have GNOME settings been saved?
          command: |
            [[ -f ~/.local/share/mendingwall/save/GNOME.gsettings ]] || exit 1
      - run:
          name: Touch config file
          command: |
            touch ~/.config/kwinrc
            sleep 2
      - run:
          name: Has config file been saved?
          command: |
            [[ -f ~/.local/share/mendingwall/save/GNOME/kwinrc ]] || exit 1

      - run:
          name: Install KDE Plasma
          command: apt install kde-standard
      - run:
          name: Have KDE apps been tidied?
          command: |
            [[ `ls ~/.local/share/applications/org.kde.*.desktop | wc -l` > 0 ]] || exit 1

jobs:

  linux:
    executor: linux
    steps:
      - checkout
      - environment
      - build
      - test

  deploy:
    executor: linux
    steps:
      - environment
      - run:
          name: Trigger package update
          command: |
              curl -X POST https://circleci.com/api/v2/project/gh/lawmurray/download.indii.org/pipeline \
                --header "Circle-Token: $CIRCLE_TOKEN" \
                --header "content-type: application/json" \
                --data '{"branch": "main"}'

workflows:
  all:
    jobs:
      - linux
      - deploy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
